
lab_2_GPIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000116  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  0000016a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  0000016a  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000019c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  000001d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000703  00000000  00000000  000001f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000058b  00000000  00000000  000008fb  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002c2  00000000  00000000  00000e86  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001148  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000002ef  00000000  00000000  0000116c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000168  00000000  00000000  0000145b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000015c3  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 89 00 	jmp	0x112	; 0x112 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include "Reg_Map.h"
#include <util/delay.h>

int main(void)
{
    DDRD |=(7<<5);
  6c:	81 b3       	in	r24, 0x11	; 17
  6e:	80 6e       	ori	r24, 0xE0	; 224
  70:	81 bb       	out	0x11, r24	; 17
	Reset_bit(DDRD,0);
  72:	81 b3       	in	r24, 0x11	; 17
  74:	8e 7f       	andi	r24, 0xFE	; 254
  76:	81 bb       	out	0x11, r24	; 17
	PORTD |=(0b000<<5);
  78:	82 b3       	in	r24, 0x12	; 18
  7a:	82 bb       	out	0x12, r24	; 18
    while (1) 
    {
		Toggle_bit(PORTD,5);
  7c:	92 b3       	in	r25, 0x12	; 18
  7e:	80 e2       	ldi	r24, 0x20	; 32
  80:	98 27       	eor	r25, r24
  82:	92 bb       	out	0x12, r25	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  84:	2f ef       	ldi	r18, 0xFF	; 255
  86:	34 e3       	ldi	r19, 0x34	; 52
  88:	4c e0       	ldi	r20, 0x0C	; 12
  8a:	21 50       	subi	r18, 0x01	; 1
  8c:	30 40       	sbci	r19, 0x00	; 0
  8e:	40 40       	sbci	r20, 0x00	; 0
  90:	e1 f7       	brne	.-8      	; 0x8a <main+0x1e>
  92:	00 c0       	rjmp	.+0      	; 0x94 <main+0x28>
  94:	00 00       	nop
		_delay_ms(500);
		Toggle_bit(PORTD,6);
  96:	22 b3       	in	r18, 0x12	; 18
  98:	90 e4       	ldi	r25, 0x40	; 64
  9a:	29 27       	eor	r18, r25
  9c:	22 bb       	out	0x12, r18	; 18
  9e:	2f ef       	ldi	r18, 0xFF	; 255
  a0:	34 e3       	ldi	r19, 0x34	; 52
  a2:	4c e0       	ldi	r20, 0x0C	; 12
  a4:	21 50       	subi	r18, 0x01	; 1
  a6:	30 40       	sbci	r19, 0x00	; 0
  a8:	40 40       	sbci	r20, 0x00	; 0
  aa:	e1 f7       	brne	.-8      	; 0xa4 <main+0x38>
  ac:	00 c0       	rjmp	.+0      	; 0xae <main+0x42>
  ae:	00 00       	nop
		_delay_ms(500);
		Toggle_bit(PORTD,7);
  b0:	22 b3       	in	r18, 0x12	; 18
  b2:	20 58       	subi	r18, 0x80	; 128
  b4:	22 bb       	out	0x12, r18	; 18
  b6:	2f ef       	ldi	r18, 0xFF	; 255
  b8:	34 e3       	ldi	r19, 0x34	; 52
  ba:	4c e0       	ldi	r20, 0x0C	; 12
  bc:	21 50       	subi	r18, 0x01	; 1
  be:	30 40       	sbci	r19, 0x00	; 0
  c0:	40 40       	sbci	r20, 0x00	; 0
  c2:	e1 f7       	brne	.-8      	; 0xbc <main+0x50>
  c4:	00 c0       	rjmp	.+0      	; 0xc6 <main+0x5a>
  c6:	00 00       	nop
		_delay_ms(500);
		Toggle_bit(PORTD,7);
  c8:	22 b3       	in	r18, 0x12	; 18
  ca:	20 58       	subi	r18, 0x80	; 128
  cc:	22 bb       	out	0x12, r18	; 18
  ce:	2f ef       	ldi	r18, 0xFF	; 255
  d0:	34 e3       	ldi	r19, 0x34	; 52
  d2:	4c e0       	ldi	r20, 0x0C	; 12
  d4:	21 50       	subi	r18, 0x01	; 1
  d6:	30 40       	sbci	r19, 0x00	; 0
  d8:	40 40       	sbci	r20, 0x00	; 0
  da:	e1 f7       	brne	.-8      	; 0xd4 <main+0x68>
  dc:	00 c0       	rjmp	.+0      	; 0xde <main+0x72>
  de:	00 00       	nop
		_delay_ms(500);
		Toggle_bit(PORTD,6);
  e0:	22 b3       	in	r18, 0x12	; 18
  e2:	92 27       	eor	r25, r18
  e4:	92 bb       	out	0x12, r25	; 18
  e6:	9f ef       	ldi	r25, 0xFF	; 255
  e8:	24 e3       	ldi	r18, 0x34	; 52
  ea:	3c e0       	ldi	r19, 0x0C	; 12
  ec:	91 50       	subi	r25, 0x01	; 1
  ee:	20 40       	sbci	r18, 0x00	; 0
  f0:	30 40       	sbci	r19, 0x00	; 0
  f2:	e1 f7       	brne	.-8      	; 0xec <main+0x80>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x8a>
  f6:	00 00       	nop
		_delay_ms(500);
		Toggle_bit(PORTD,5);
  f8:	92 b3       	in	r25, 0x12	; 18
  fa:	89 27       	eor	r24, r25
  fc:	82 bb       	out	0x12, r24	; 18
  fe:	4f ef       	ldi	r20, 0xFF	; 255
 100:	84 e3       	ldi	r24, 0x34	; 52
 102:	9c e0       	ldi	r25, 0x0C	; 12
 104:	41 50       	subi	r20, 0x01	; 1
 106:	80 40       	sbci	r24, 0x00	; 0
 108:	90 40       	sbci	r25, 0x00	; 0
 10a:	e1 f7       	brne	.-8      	; 0x104 <main+0x98>
 10c:	00 c0       	rjmp	.+0      	; 0x10e <main+0xa2>
 10e:	00 00       	nop
 110:	b5 cf       	rjmp	.-150    	; 0x7c <main+0x10>

00000112 <_exit>:
 112:	f8 94       	cli

00000114 <__stop_program>:
 114:	ff cf       	rjmp	.-2      	; 0x114 <__stop_program>
